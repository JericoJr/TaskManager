name: Send Email Reminders   # Name of the workflow, shows up in GitHub Actions tab

on:
  schedule:
    - cron: '0 9 * * *'      # Run every day at 9:00 AM UTC (5:00 AM EDT) → send "today" reminders
    - cron: '0 0 * * *'      # Run every day at 12:00 AM UTC (8:00 PM EDT) → send "tomorrow" reminders
    - cron: '0 * * * *'       # Runs every hour
  workflow_dispatch:          # Allows manual triggering of this workflow from the GitHub Actions tab

jobs:
  run-reminder-script:        # The job name, can be referenced if multiple jobs exist
    runs-on: ubuntu-latest    # Runner environment (Linux VM provided by GitHub)

    outputs:                  # Define job outputs (used here to pass which script to run)
      script: ${{ steps.set-script.outputs.script }}

    steps:                    # Ordered list of steps in this job
      - name: Checkout code
        uses: actions/checkout@v3   # Pulls your repository code into the runner

      # Restore database artifact from the last workflow run
      - name: Download database artifact
        uses: actions/download-artifact@v4
        with:
          name: taskmanager         # The name you chose for the database artifact
          path: instance            # Path to place it inside the workflow (instance/ folder)
        continue-on-error: true     # If no artifact exists yet (first run), don't fail the workflow

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'    # Install and use Python 3.11 on the runner

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip   # Upgrade pip
          pip install -r requirements.txt       # Install Python dependencies for your app

      - name: Determine which reminder script to run
        id: set-script                 # ID for referencing outputs later
        run: |
          HOUR=$(date -u +"%H")        # Get the current UTC hour
          if [ "$HOUR" -eq 9 ]; then
            echo "script=reminders-today.py" >> "$GITHUB_OUTPUT"   # Use reminders-today script
          elif [ "$HOUR" -eq 0 ]; then
            echo "script=reminders-tomorrow.py" >> "$GITHUB_OUTPUT" # Use reminders-tomorrow script
          else
            echo "script=reminders-hour.py" >> "$GITHUB_OUTPUT" # Use reminders-hour script
          fi

      - name: Run reminders script
        if: steps.set-script.outputs.script != ''   # Only run if script is set above
        env:                                       # Environment variables pulled from GitHub Secrets
          MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }} # Your email username (stored in repo settings → Secrets)
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }} # Your email password (also from Secrets)
        run: python ${{ steps.set-script.outputs.script }} # Run the correct reminder script

      # Save the updated database back as artifact for the next workflow run
      - name: Upload database artifact
        uses: actions/upload-artifact@v4
        with:
          name: taskmanager           # Same name as above, so future runs know what to download
          path: instance/taskmanager.db        # Path to the SQLite DB file

      - name: Debug log
        if: always()                     # Always runs, even if previous steps fail
        run: echo "Reminders script completed"   # Simple log to show completion in Actions tab
